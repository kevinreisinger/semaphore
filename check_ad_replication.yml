---
- name: Check Active Directory Replication Status
  hosts: domain_controllers
  gather_facts: no

  tasks:
    # 1. Execute repadmin /showrepl command
    - name: Execute repadmin /showrepl command
      ansible.windows.win_shell: |
        # Use repadmin to show replication status
        & repadmin /showrepl $env:COMPUTERNAME
      register: replication_output
      # Ignore non-zero return codes (rc=1) which are common for repadmin even on success.
      failed_when: false

    # 2. Process the raw output to create a clean summary
    - name: Process Replication Output for Clean Summary
      ansible.windows.win_shell: |
        $RawOutput = @"
        {{ replication_output.stdout }}
        "@

        # Initialize the output array and a variable to hold the current context
        $Summary = @()
        $CurrentPartition = ""
        $CurrentNeighbor = ""
        
        # Split the output into lines and process
        $RawOutput -split "`n" | ForEach-Object {
            $line = $_.Trim()
            
            # Identify the Partition (starts with DC=)
            if ($line -match "^(DC=|CN=)") {
                $CurrentPartition = $line
            } 
            # Identify the Neighbor/Source DC (starts with DomainName\DCName via RPC)
            elseif ($line -match "^\s+([^\\]+\\[^\s]+) via RPC$") {
                $CurrentNeighbor = $Matches[1]
            }
            # Identify the Last Attempt Status
            elseif ($line -match "Last attempt @.* was successful\.$") {
                # Successful replication entry
                $Summary += "✅ Partition: $CurrentPartition | Source DC: $CurrentNeighbor | Status: SUCCESSFUL"
                # Reset neighbor to avoid double-counting the next status line
                $CurrentNeighbor = "" 
            }
            elseif ($line -match "Last attempt @.* failed with status \((.*?)\)\.$") {
                # Failed replication entry
                $ErrorStatus = $Matches[1]
                $Summary += "❌ Partition: $CurrentPartition | Source DC: $CurrentNeighbor | Status: FAILED ($ErrorStatus)"
                $CurrentNeighbor = ""
            }
        }
        
        $Summary -join "`n"
      register: cleaned_output
      # Only process if the raw output was captured
      when: replication_output.stdout is defined and replication_output.stdout | length > 0


    # 3. Display the Cleaned Status
    - name: Display Cleaned Replication Status Summary
      ansible.builtin.debug:
        msg: |
          ==================================================
          CLEANED REPLICATION SUMMARY FOR: {{ inventory_hostname }}
          ==================================================

          {{ cleaned_output.stdout | default('No replication status could be parsed.') }}

          --------------------------------------------------
          Raw Execution Status: {{ replication_output.rc }}
          --------------------------------------------------
