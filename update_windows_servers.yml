---
- name: Windows Updates with Auto Reboot (skip specified hosts)
  hosts: all
  gather_facts: false
  vars:
    temp_dir: "C:\\Temp"
    skip_servers:
      - dc08.reisingers.com
    share_unc_path: "\\\\kevireis-home\\i$\\Documents\\Kevin\\Network Documentation\\Server Updates\\"
    share_username: ""
    share_password: ""

  tasks:

    - name: Ensure Temp directory exists
      win_file:
        path: "{{ temp_dir }}"
        state: directory

    - name: Skip patching/reboot if host is in skip_servers
      set_fact:
        skip_host: true
      when: inventory_hostname in skip_servers

    - name: Install all available updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - DefinitionUpdates
          - UpdateRollups
          - FeaturePacks
          - ServicePacks
          - Tools
          - Updates
        reboot: yes
      register: update_result
      when: skip_host is not defined

    - name: Write update summary locally and to share
      win_shell: |
        $SummaryPathLocal = "{{ temp_dir }}\{{ inventory_hostname }}_windows_update_summary.txt"
        $SummaryPathShare = "{{ share_unc_path }}\{{ inventory_hostname }}_windows_update_summary.txt"

        "Windows Update Summary for {{ inventory_hostname }}" | Out-File $SummaryPathLocal
        "" | Out-File $SummaryPathLocal -Append

        $updates = @{}
        if ($env:update_result -and $env:update_result -ne "{}") {
            $updates = $env:update_result | ConvertFrom-Json
        }

        "Installed updates:" | Out-File $SummaryPathLocal -Append
        if ($updates) {
            foreach ($u in $updates.PSObject.Properties) {
                if ($u.Value.installed -eq $true) {
                    " - $($u.Value.title) ($($u.Value.kb -join ', '))" | Out-File $SummaryPathLocal -Append
                }
            }
        } else {
            " - None" | Out-File $SummaryPathLocal -Append
        }

        "" | Out-File $SummaryPathLocal -Append
        "Failed updates:" | Out-File $SummaryPathLocal -Append
        if ($updates) {
            foreach ($u in $updates.PSObject.Properties) {
                if ($u.Value.installed -ne $true) {
                    " - $($u.Value.title) ($($u.Value.kb -join ', '))" | Out-File $SummaryPathLocal -Append
                }
            }
        } else {
            " - None" | Out-File $SummaryPathLocal -Append
        }

        "Reboot required: $($update_result.reboot_required -eq $true)" | Out-File $SummaryPathLocal -Append

        if ("{{ share_unc_path }}" -ne "") {
            try {
                Copy-Item -Path $SummaryPathLocal -Destination $SummaryPathShare -Force
            } catch {
                Write-Host "⚠️ Unable to copy summary to share; left on local C:\Temp"
            }
        }
      args:
        executable: powershell.exe
      environment:
        update_result: "{{ update_result.updates | to_json }}"
      when: skip_host is not defined

    - name: Reboot if required
      win_reboot:
        reboot_timeout: 1200
      when:
        - skip_host is not defined
        - update_result.reboot_required | default(false)
