---
- name: Windows Updates with Auto Reboot (skip specified hosts)
  hosts: all
  gather_facts: no
  vars:
    skip_servers:
      - dc08.reisingers.com
      # Add more hosts here
    temp_summary_dir: "C:\\Temp"

  tasks:

    - name: Ensure Temp directory exists
      win_file:
        path: "{{ temp_summary_dir }}"
        state: directory

    - name: Skip patching/reboot if host is in skip_servers
      win_shell: |
        $Timestamp = (Get-Date).ToString("yyyy-MM-dd_HH-mm-ss")
        $SummaryPath = Join-Path "{{ temp_summary_dir }}" "windows_update_summary_$env:COMPUTERNAME`_$Timestamp.txt"
        "Updates skipped for this host: $env:COMPUTERNAME" | Out-File -FilePath $SummaryPath
        "Timestamp: $Timestamp" | Out-File -FilePath $SummaryPath -Append
        $SummaryPath.Trim()
      args:
        executable: powershell
      when: inventory_hostname in skip_servers
      register: host_summary_path

    - name: Install all available updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - UpdateRollups
          - Definition Updates
          - Drivers
          - Windows Defender
          - FeaturePacks
          - ServicePacks
          - Tools
          - Updates
        reboot: no
      register: update_result
      when: inventory_hostname not in skip_servers

    - name: Create per-host update summary file
      win_shell: |
        $Timestamp = (Get-Date).ToString("yyyy-MM-dd_HH-mm-ss")
        $SummaryPath = Join-Path "{{ temp_summary_dir }}" "windows_update_summary_$env:COMPUTERNAME`_$Timestamp.txt"

        "Windows Update Summary for $env:COMPUTERNAME" | Out-File -FilePath $SummaryPath
        "Timestamp: $Timestamp" | Out-File -FilePath $SummaryPath -Append
        "" | Out-File -FilePath $SummaryPath -Append

        "Installed updates:" | Out-File -FilePath $SummaryPath -Append
        $updates = {{ update_result.updates | to_json | quote }} | ConvertFrom-Json
        foreach ($id in $updates.PSObject.Properties.Name) {
            $u = $updates.$id
            if ($u.installed -eq $true) {
                $kb = if ($u.kb) { "($($u.kb -join ', '))" } else { "" }
                "✅ $($u.title) $kb" | Out-File -FilePath $SummaryPath -Append
            }
        }

        "" | Out-File -FilePath $SummaryPath -Append
        "Failed updates:" | Out-File -FilePath $SummaryPath -Append
        foreach ($id in $updates.PSObject.Properties.Name) {
            $u = $updates.$id
            if ($u.installed -ne $true) {
                $kb = if ($u.kb) { "($($u.kb -join ', '))" } else { "" }
                "❌ $($u.title) $kb" | Out-File -FilePath $SummaryPath -Append
            }
        }

        "" | Out-File -FilePath $SummaryPath -Append
        $RebootText = if ({{ update_result.reboot_required | lower }}) { "⚠️ Reboot required" } else { "✅ No reboot needed" }
        $RebootText | Out-File -FilePath $SummaryPath -Append
        $SummaryPath.Trim()
      args:
        executable: powershell
      register: host_summary_path
      when: inventory_hostname not in skip_servers

    - name: Reboot if required (skip_servers excluded)
      win_reboot:
      when:
        - update_result.reboot_required
        - inventory_hostname not in skip_servers
