---
- name: Windows Updates with Auto Reboot (skip specified hosts)
  hosts: windows
  gather_facts: yes
  vars:
    skip_servers:
      - dc08.reisingers.com
    temp_summary: "C:\\Temp\\windows_update_summary.txt"

  tasks:
    - name: Ensure Temp directory exists
      win_file:
        path: C:\Temp
        state: directory

    - name: Skip patching/reboot if host is in skip_servers
      debug:
        msg: "Skipping updates and reboot for {{ inventory_hostname }}"
      when: inventory_hostname in skip_servers

    - name: Install all available updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - Definition Updates
          - Windows Defender
          - Drivers
          - UpdateRollups
          - FeaturePacks
          - Tools
          - Updates
          - UpdateRollups
        reboot: no
      register: update_result
      when: inventory_hostname not in skip_servers

    - name: Create per-host update summary file
      win_shell: |
        $SummaryPath = "{{ temp_summary }}"
        "Windows Update Summary for {{ inventory_hostname }}" | Out-File -FilePath $SummaryPath
        "" | Out-File -FilePath $SummaryPath -Append
        "Installed updates:" | Out-File -FilePath $SummaryPath -Append
        foreach ($u in {{ update_result.updates | default({}) | to_json | from_json }}.GetEnumerator()) {
          if ($u.Value.installed -eq $true) {
            " - $($u.Value.title) ($($u.Value.kb -join ', '))" | Out-File -FilePath $SummaryPath -Append
          }
        }
        "" | Out-File -FilePath $SummaryPath -Append
        "Failed updates:" | Out-File -FilePath $SummaryPath -Append
        foreach ($u in {{ update_result.updates | default({}) | to_json | from_json }}.GetEnumerator()) {
          if ($u.Value.installed -ne $true) {
            " - $($u.Value.title) ($($u.Value.kb -join ', '))" | Out-File -FilePath $SummaryPath -Append
          }
        }
        "" | Out-File -FilePath $SummaryPath -Append
        "Reboot required: {{ update_result.reboot_required | default(false) }}" | Out-File -FilePath $SummaryPath -Append
      args:
        executable: powershell
      when: inventory_hostname not in skip_servers

    - name: Reboot if required (skip skip_servers)
      win_reboot:
        reboot_timeout: 600
      when: inventory_hostname not in skip_servers and update_result.reboot_required | default(false)
