---
- name: Windows Updates with Auto Reboot (skip specified hosts)
  hosts: windows
  gather_facts: yes
  vars:
    skip_servers:
      - dc08.reisingers.com
      - kevireis-vc2.reisingers.com
    share_unc_path: "\\\\kevireis-home\\i$\\Documents\\Kevin\\Network Documentation\\Server Updates\\"
    share_username:
    share_password:

  tasks:
    - name: Ensure Temp directory exists
      win_file:
        path: C:\Temp
        state: directory

    - name: Skip patching/reboot if host is in skip_servers
      debug:
        msg: "Skipping updates for {{ inventory_hostname }}"
      when: inventory_hostname in skip_servers

    - name: Install all available updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - Definition Updates
          - Windows Defender
          - Drivers
          - UpdateRollups
          - FeaturePacks
          - ServicePacks
          - Updates
        reboot: no
      register: update_result
      when: inventory_hostname not in skip_servers

    - name: Create per-host update summary file
      win_shell: |
        $SummaryPathLocal = "C:\Temp\{{ inventory_hostname }}_windows_update_summary.txt"
        $SummaryPathShare = "{{ share_unc_path }}\{{ inventory_hostname }}_windows_update_summary.txt"

        "Windows Update Summary for {{ inventory_hostname }}" | Out-File $SummaryPathLocal
        "" | Out-File $SummaryPathLocal -Append

        "Installed updates:" | Out-File $SummaryPathLocal -Append
        if ($null -ne $update_result.updates) {
          foreach ($u in $update_result.updates.GetEnumerator()) {
            if ($u.Value.installed -eq $true) {
              " - $($u.Value.title) ($($u.Value.kb -join ', '))" | Out-File $SummaryPathLocal -Append
            }
          }
        } else {
          " - None" | Out-File $SummaryPathLocal -Append
        }

        "" | Out-File $SummaryPathLocal -Append
        "Failed updates:" | Out-File $SummaryPathLocal -Append
        if ($null -ne $update_result.updates) {
          foreach ($u in $update_result.updates.GetEnumerator()) {
            if ($u.Value.installed -ne $true) {
              " - $($u.Value.title) ($($u.Value.kb -join ', '))" | Out-File $SummaryPathLocal -Append
            }
          }
        } else {
          " - None" | Out-File $SummaryPathLocal -Append
        }

        # Attempt to copy to share
        try {
          Copy-Item -Path $SummaryPathLocal -Destination $SummaryPathShare -Force
        } catch {
          Write-Host "⚠️ Unable to copy summary to share; left on local C:\Temp"
        }
      args:
        executable: powershell
      when: inventory_hostname not in skip_servers

    - name: Reboot if required (skip_servers excluded)
      win_reboot:
        reboot_timeout: 3600
      when:
        - inventory_hostname not in skip_servers
        - update_result.reboot_required | default(false)
