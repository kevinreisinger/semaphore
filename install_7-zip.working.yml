---
- name: Install 7-Zip (MSI) on Windows Host via UNC Path
  hosts: windows # Target host group
  gather_facts: no

  vars:
    app_name: "7-Zip 25.01 (x64)"
    
    # --- UNC PATH CONFIGURATION ---
    share_unc_root: "\\\\kevireis-home\\i$"
    # Path relative to the share root 
    installer_relative_path: "Applications\\Utilities\\7-Zip\\v25.01\\Setup.msi" 
    
    # FINAL UNC PATH TO THE INSTALLER 
    installer_source_unc: "{{ share_unc_root }}\\{{ installer_relative_path }}"
    
    # Local path on the target Windows machine for installation
    local_installer_path: 'C:\Windows\Temp\7zip_install.msi'
    
    # CRITICAL: Product ID for 7-Zip 25.01 (x64)
    product_id: "{23170F69-40C1-2702-2501-000100000000}" 

    # --- REQUIRED: Set these via Semaphore Credential! ---
    share_username: ""
    share_password: ""
    # ---------------------------------------------------

  tasks:
    - name: "1. ESTABLISH UNC Connection and COPY Installer to Local Temp Directory"
      ansible.windows.win_shell: |
        # Since win_copy cannot use credentials, we use 'net use' to establish a session,
        # then the native 'copy' command to move the file using the full UNC path.

        # NOTE: Variables are passed directly as Jinja templates to avoid YAML parsing errors.
        $uncPath = '{{ installer_source_unc }}'
        $destPath = '{{ local_installer_path }}'
        $shareUser = '{{ share_username }}'
        $sharePass = '{{ share_password }}'
        
        # 1. Temporarily establish a connection to the share using the provided credentials
        # This is CRITICAL for the subsequent 'copy' command to work over the network.
        # We must use cmd.exe to execute net use for reliable credential passing.
        Write-Host "Establishing UNC session to: {{ share_unc_root }}"
        cmd.exe /c "net use {{ share_unc_root }} $sharePass /user:$shareUser /persistent:no"
        
        # Check if the connection succeeded before attempting copy
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to establish UNC connection. Check credentials or share availability."
            exit 1
        }

        # 2. Copy the file using the full UNC path to the local temporary location
        # The UNC path variable ($uncPath) is already quoted correctly for cmd.exe copy.
        Write-Host "Copying installer from $uncPath to $destPath"
        cmd.exe /c "copy /Y $uncPath $destPath"
        
        # Check if the copy operation succeeded
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to copy file using UNC path."
            # Attempt to delete the temporary UNC session before failing
            cmd.exe /c "net use {{ share_unc_root }} /delete /y" | Out-Null 
            exit 1
        }
        
        Write-Host "File copied successfully."
      
      no_log: true
      register: copy_result
      
    - name: "2. INSTALL 7-Zip from Local Path (with Idempotency Check)"
      ansible.windows.win_shell: |
        $AppID = '{{ product_id }}'
        $Installed = Get-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*, HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* -ErrorAction SilentlyContinue |
                     Where-Object {$_.PSChildName -eq $AppID}
        
        if (-not $Installed) {
            Write-Host "Installing {{ app_name }} from LOCAL path: {{ local_installer_path }}"
            # Run msiexec directly from the local C:\Windows\Temp path
            msiexec.exe /i "{{ local_installer_path }}" /qn /norestart
        } else {
            Write-Host "{{ app_name }} is already installed. Skipping installation."
        }
      register: install_result
      changed_when: "'Installing' in install_result.stdout"
      # Only run if the COPY task succeeded.
      when: copy_result is succeeded

    - name: 3. CLEANUP local installer file
      # Remove the temporary installer from the target machine.
      ansible.windows.win_file:
        path: "{{ local_installer_path }}"
        state: absent
      # Only clean up if the COPY task succeeded.
      when: copy_result is succeeded

    - name: 4. CLEANUP UNC connection (Just in case 'net use' persisted it)
      # Attempt to remove the UNC session if it was established. Ignore errors.
      ansible.windows.win_shell: cmd.exe /c "net use {{ share_unc_root }} /delete /y"
      ignore_errors: yes 
      failed_when: false
      when: copy_result is succeeded
      
    - name: Display installation status
      ansible.builtin.debug:
        msg: "Installation status (changed=False means already installed or skipped): {{ install_result.changed | default('N/A') }}"
      # Only show final status if the install task was attempted.
      when: install_result is defined
