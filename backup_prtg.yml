---
- name: Backup PRTG
  # Target the specific Windows Server where the PRTG data resides
  hosts: server2k19.reisingers.com
  gather_facts: no

  vars:
    # --- PRTG & Local Configuration ---
    prtg_data_path: "C:\\ProgramData\\Paessler\\PRTG Network Monitor"
    local_temp_backup_root: "C:\\Temp\\PRTG_Backup"
    max_backups_to_keep: 10
    
    # --- NETWORK SHARE CREDENTIALS (MUST BE POPULATED!) ---
    # User who HAS WRITE ACCESS to the final network share destination
    share_username: "PUT_YOUR_SHARE_USER_HERE" 
    share_password: "PUT_YOUR_SHARE_PASSWORD_HERE" # USE ANSIBLE VAULT FOR THIS
    final_network_share: "\\\\kevireis-home\\i$\\Applications\\Utilities\\PRTG Network Monitor\\Backup"
    
    # Drive letter for temporary mapping (Must be unused)
    mapped_drive_letter: "Z" 

    # Internal variable generation
    current_timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M') }}"
    local_backup_file: "{{ local_temp_backup_root }}\\{{ 'PRTG_Backup_' + current_timestamp + '.zip' }}"
    final_backup_file: "{{ mapped_drive_letter }}:\\{{ 'PRTG_Backup_' + current_timestamp + '.zip' }}"

  tasks:

    - name: Ensure local temporary backup directory exists
      ansible.windows.win_file:
        path: "{{ local_temp_backup_root }}"
        state: directory

    - name: Execute PRTG Backup and Network Copy Script (Single PowerShell Block)
      ansible.windows.win_powershell:
        script: |
          # --- Configuration (Pulled from Ansible variables) ---
          $prtgDataPath = '{{ prtg_data_path }}'
          $localBackupRoot = '{{ local_temp_backup_root }}'
          $maxBackups = {{ max_backups_to_keep }}
          $localBackupFile = '{{ local_backup_file }}'
          $finalNetworkShare = '{{ final_network_share }}'
          $mappedDriveLetter = '{{ mapped_drive_letter }}'
          $finalBackupFile = '{{ final_backup_file }}'
          $shareUsername = '{{ share_username }}'
          $sharePassword = '{{ share_password }}' 
          
          # Helper function to ensure services are restarted on failure
          function Restart-Services {
              Write-Host "Attempting to restart services..."
              Start-Service -Name "PRTGCoreService" -ErrorAction SilentlyContinue
              Start-Service -Name "PRTGProbeService" -ErrorAction SilentlyContinue
          }
          
          # --- 1. Stop PRTG services ---
          Write-Host "Stopping PRTG services..."
          Stop-Service -Name "PRTGCoreService" -Force -ErrorAction Stop
          Stop-Service -Name "PRTGProbeService" -Force -ErrorAction Stop
          Start-Sleep -Seconds 5

          # --- 2. Create ZIP backup (Locally) ---
          Write-Host "Creating local backup at $localBackupFile ..."
          try {
              Compress-Archive -Path "$prtgDataPath\*" -DestinationPath $localBackupFile -Force
          }
          catch {
              Write-Host "CRITICAL ERROR: Failed to compress and write ZIP file. Error Details: $($_.Exception.Message)"
              Restart-Services
              exit 1
          }

          # --- 3. Map Network Drive with Specified Credentials ---
          Write-Host "Attempting to map network drive ${mappedDriveLetter}: to ${finalNetworkShare} with specified credentials..."
          
          # Remove any existing mapping for the drive letter silently
          cmd.exe /c net use ${mappedDriveLetter}: /delete /y | Out-Null
          
          # Map the new drive using net use, forcing the share credentials
          cmd.exe /c net use ${mappedDriveLetter}: "${finalNetworkShare}" "${sharePassword}" /user:"${shareUsername}" /persistent:no
          
          if ($LASTEXITCODE -ne 0) {
              Write-Host "CRITICAL ERROR: Failed to map network drive. Code $LASTEXITCODE. Check firewall/permissions on the share."
              Remove-Item $localBackupFile -Force -ErrorAction SilentlyContinue
              Restart-Services
              exit 1
          }
          Write-Host "Network drive mapped successfully."

          # --- 4. Copy Local ZIP to Mapped Drive ---
          Write-Host "Copying $localBackupFile to $finalBackupFile ..."
          try {
              Copy-Item -Path $localBackupFile -Destination $finalBackupFile -Force
          } catch {
              Write-Host "CRITICAL ERROR: Failed to copy file to network share. Check credentials/permissions. $($_.Exception.Message)"
              # Attempt unmap/cleanup before exit
              cmd.exe /c net use ${mappedDriveLetter}: /delete /y | Out-Null
              Remove-Item $localBackupFile -Force -ErrorAction SilentlyContinue
              Restart-Services
              exit 1
          }

          # --- 5. Cleanup (Network Share Retention) ---
          Write-Host "Cleaning up old NETWORK backups, keeping only the last $maxBackups..."
          $backups = Get-ChildItem -Path ${mappedDriveLetter}:\\ -Filter "PRTG_Backup_*.zip" |
                      Sort-Object LastWriteTime -Descending

          if ($backups.Count -gt $maxBackups) {
              $toDelete = $backups | Select-Object -Skip $maxBackups
              foreach ($file in $toDelete) {
                  Write-Host "Deleting old network backup: $($file.FullName)"
                  Remove-Item $file.FullName -Force
              }
          }

          # --- 6. Final Cleanup (Local ZIP and Drive) ---
          Write-Host "Removing local file $localBackupFile and unmapping drive ${mappedDriveLetter}: ..."
          Remove-Item $localBackupFile -Force -ErrorAction SilentlyContinue
          cmd.exe /c net use ${mappedDriveLetter}: /delete /y | Out-Null
          
          # --- 7. Start PRTG services ---
          Restart-Services
          
          Write-Host "Backup and Transfer completed successfully!"

    - name: Display PowerShell script output
      ansible.builtin.debug:
        var: ps_output.stdout_lines
