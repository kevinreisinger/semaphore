---
- name: Run Existing PowerShell Script on Remote Windows Server
  # Change 'windows_server' to the exact hostname you want to target.
  hosts: server2k19.reisingers.com
  gather_facts: no
  
  # Ensure Ansible is configured for Windows management (WinRM)
  vars:
    # Configuration from the PowerShell script:
    # The PRTG data path is usually fixed
    prtg_data_path: "C:\\ProgramData\\Paessler\\PRTG Network Monitor"
    # *** IMPORTANT: This must be updated to your backup destination ***
    backup_root: "\\\\kevireis-home\\i$\\Applications\\Utilities\\PRTG Network Monitor\\Backup\\"
    # Keep only this many most recent backups
    max_backups: 10
    
  tasks:
    - name: Execute PRTG Backup Script (In-Memory PowerShell)
      # The win_powershell module executes the script contents directly in memory,
      # eliminating execution policy issues and path parsing errors.
      ansible.windows.win_powershell:
        script: |
          # --- Configuration (using Ansible variables) ---
          $prtgDataPath = "{{ prtg_data_path }}"
          $backupRoot = "{{ backup_root }}"
          $maxBackups = {{ max_backups }}
          
          $timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm"
          $backupFile = Join-Path $backupRoot "PRTG_Backup_$timestamp.zip"
          
          # --- Ensure backup folder exists ---
          Write-Host "Checking backup path: $backupRoot"
          if (!(Test-Path $backupRoot)) {
              Write-Host "Creating backup directory..."
              New-Item -ItemType Directory -Path $backupRoot | Out-Null
          }
          
          # --- Stop PRTG services ---
          Write-Host "Stopping PRTG services..."
          Stop-Service -Name "PRTGCoreService" -Force -ErrorAction SilentlyContinue | Out-Null
          Stop-Service -Name "PRTGProbeService" -Force -ErrorAction SilentlyContinue | Out-Null
          Start-Sleep -Seconds 5
          
          # --- Create ZIP backup ---
          Write-Host "Creating backup at $backupFile ..."
          # NOTE: The * is necessary to compress the CONTENTS of the directory, not the directory itself
          Compress-Archive -Path "$prtgDataPath\\*" -DestinationPath $backupFile -Force
          
          # --- Start PRTG services ---
          Write-Host "Restarting PRTG services..."
          Start-Service -Name "PRTGCoreService" | Out-Null
          Start-Service -Name "PRTGProbeService" | Out-Null
          
          # --- Keep only the most recent $maxBackups ---
          Write-Host "Cleaning up old backups, keeping only the last $maxBackups..."
          $backups = Get-ChildItem -Path $backupRoot -Filter "PRTG_Backup_*.zip" |
                      Sort-Object LastWriteTime -Descending
          
          if ($backups.Count -gt $maxBackups) {
              $toDelete = $backups | Select-Object -Skip $maxBackups
              foreach ($file in $toDelete) {
                  Write-Host "Deleting old backup: $($file.FullName)"
                  Remove-Item $file.FullName -Force
              }
          }
          
          Write-Host "Backup completed successfully!"
      register: ps_output
      
    - name: Display PowerShell script output
      ansible.builtin.debug:
        var: ps_output
