---
- name: Install 7-Zip (MSI) on Windows Host via UNC Path Authentication
  hosts: windows # Target host group
  gather_facts: no

  vars:
    app_name: "7-Zip 25.01 (x64)"
    
    # --- UNC PATH CONFIGURATION ---
    # The full path to the installer file on the network share
    installer_unc_path: "\\\\kevireis-home\\i$\\Applications\\Utilities\\7-Zip\\v25.01\\Setup.msi" 
    
    # The root of the network share (needed for the net use command)
    share_unc_root: "\\\\kevireis-home\\i$"
    
    # CRITICAL: This Product ID is for 7-Zip 25.01 x64. Used for idempotency check.
    product_id: "{23170F69-40C1-2702-2501-000100000000}" 

    # --- REQUIRED: Set these via Semaphore Credential! ---
    share_username: ""
    share_password: ""
    # ---------------------------------------------------

  tasks:
    - name: 1. AUTHENTICATE WinRM Session to UNC Path
      # Using win_command to bypass PowerShell parser issues for the simple net use command.
      ansible.windows.win_command: 'net use "{{ share_unc_root }}" "{{ share_password }}" /user:"{{ share_username }}" /persistent:no /force'
      no_log: true # Keep credentials secure
      ignore_errors: yes 

    - name: 2. INSTALL 7-Zip using MsiExec and UNC Path (with Idempotency Check)
      # win_shell is still required here for the PowerShell logic (if/else and registry check).
      ansible.windows.win_shell: |
        $AppID = '{{ product_id }}'
        # Check registry for the product ID
        $Installed = Get-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*, HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* -ErrorAction SilentlyContinue |
                     Where-Object {$_.PSChildName -eq $AppID}
        
        if (-not $Installed) {
            Write-Host "Installing {{ app_name }} from UNC path: {{ installer_unc_path }}"
            # Execute MSI installer natively: /i=install, /qn=quiet no UI, /norestart
            # Use Start-Process msiexec.exe to ensure proper path handling.
            Start-Process msiexec.exe -ArgumentList "/i `\"{{ installer_unc_path }}`\" /qn /norestart" -Wait
        } else {
            Write-Host "{{ app_name }} is already installed. Skipping installation."
        }
      register: install_result
      # Register the task as 'changed' only if the installation path was executed
      changed_when: "'Installing' in install_result.stdout"

    - name: 3. UN-AUTHENTICATE (Delete net use entry)
      ansible.windows.win_command: net use "{{ share_unc_root }}" /delete
      ignore_errors: yes # Ignore if the entry wasn't created or is already gone

    - name: Display installation status
      ansible.builtin.debug:
        msg: "Installation task complete. Output: {{ install_result.stdout_lines | default('Installation status not captured, check host logs.') }}"
